"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66],{1973:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return m},default:function(){return A},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return h}});var o=t(7462),a=t(3366),s=(t(7294),t(3905)),i=(t(6435),t(2004),t(5488)),l=t(5162),r=t(3066),d=["components"],c={sidebar_position:2},m="Docker Installation",u={unversionedId:"getting-started/dockerInstallation",id:"getting-started/dockerInstallation",title:"Docker Installation",description:"Leemons can be installed as a containerized app. This is useful for automatizing processes and avoiding the need for installing all the required dependencies on your system.",source:"@site/docs/getting-started/dockerInstallation.mdx",sourceDirName:"getting-started",slug:"/getting-started/dockerInstallation",permalink:"/leemons-docs/getting-started/dockerInstallation",draft:!1,editUrl:"https://github.com/leemonade/leemons-docs/tree/main/docs/getting-started/dockerInstallation.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/leemons-docs/getting-started/installation"},next:{title:"Administration",permalink:"/leemons-docs/category/administration"}},p={},h=[{value:"1. Requirements",id:"1-requirements",level:2},{value:"Docker and Docker Compose",id:"docker-and-docker-compose",level:3},{value:"2. Download",id:"2-download",level:2},{value:"3. Bulk data creation template configuration",id:"3-bulk-data-creation-template-configuration",level:2},{value:"4. Database",id:"4-database",level:2},{value:"5. Test your Leemons \ud83d\udc69\u200d\ud83d\udcbb",id:"5-test-your-leemons-",level:2}],k={toc:h};function A(e){var n=e.components,c=(0,a.Z)(e,d);return(0,s.kt)("wrapper",(0,o.Z)({},k,c,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"docker-installation"},"Docker Installation"),(0,s.kt)("p",null,"Leemons can be installed as a containerized app. This is useful for automatizing processes and avoiding the need for installing all the required dependencies on your system."),(0,s.kt)("h2",{id:"1-requirements"},"1. Requirements"),(0,s.kt)("h3",{id:"docker-and-docker-compose"},"Docker and Docker Compose"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker")," makes it possible to deploy all the necessary parts for leemons to work, making it fast, easy, and predictable. We use the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/"},"docker-compose")," tool for managing the multi-container deployment, so there is less work to do and Leemons can be enjoyed even quicker!"),(0,s.kt)("p",null,"You can install Docker and Docker Compose through ",(0,s.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"their website"),"."),(0,s.kt)("h2",{id:"2-download"},"2. Download"),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,s.kt)("p",null,"  Using leemons-docker in windows is as easy as run a PowerShell script, this script will generate all the needed files, if they are already downloaded, it will directly run leemons."),(0,s.kt)("p",null,"  Download the file ahead to your desired directory (keep in mind it will generate files)."),(0,s.kt)("p",null,"  ",(0,s.kt)("a",{target:"_blank",href:t(3431).Z},"Download leemons.ps1")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Or see the code"),(0,s.kt)(r.Z,{language:"powershell",title:"leemons.ps1",showLineNumbers:!0,mdxType:"CodeBlock"},'$FILE="./docker-compose.yaml"\n\ntry {\n  $OUTPUT=docker --version\n\n  echo "Docker is installed"\n}\ncatch {\n  echo "Please install Docker before continue!"\n  Pause\n  exit 0\n}\n\ntry {\n  $OUTPUT=docker-compose --version\n\n  echo "docker-compose is installed"\n} catch {\n  echo "Please install docker-compose before continue!"\n  Pause\n  exit 0\n}\n\nif ( Test-Path -Path $FILE -PathType Leaf ) {\n  echo "Config files already created."\n} else {\n@"\nMYSQLDB_USER=root\nMYSQLDB_ROOT_PASSWORD=leemons\nMYSQLDB_DATABASE=leemons\nMYSQLDB_LOCAL_PORT=3307\nNODE_LOCAL_PORT=8080\n"@ |  Out-File -FilePath ".env" -Encoding ASCII\n\n\n@"\nversion: "3.8"\nservices:\n  mysqldb:\n    image: mysql:5.7\n    command: --default-authentication-plugin=mysql_native_password\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: `$MYSQLDB_ROOT_PASSWORD\n      MYSQL_DATABASE: `$MYSQLDB_DATABASE\n    ports:\n      - `$MYSQLDB_LOCAL_PORT:3306\n    expose:\n      - 3306\n    volumes:\n      - db:/var/lib/mysql\n    healthcheck:\n      test: mysqladmin ping -h 127.0.0.1 -uroot --password=$`$MYSQL_ROOT_PASSWORD\n      timeout: 10s\n      retries: 10\n\n  leemons:\n    image: leemonade/leemons:dev\n    restart: always\n    stdin_open: true\n    tty: true\n    ports:\n      - `$NODE_LOCAL_PORT:8080\n    environment:\n      DATABASE_HOST: mysqldb\n      DATABASE_PORT: 3306\n      DATABASE_USERNAME: root\n      DATABASE_DATABASE: `$MYSQLDB_DATABASE\n      DATABASE_PASSWORD: `$MYSQLDB_ROOT_PASSWORD\n    depends_on:\n      mysqldb:\n        condition: service_healthy\nvolumes:\n  db:\n"@ | Out-File -FilePath $FILE -Encoding ASCII\n\n  "docker-compose up" | Out-File -FilePath launch-leemons.ps1 -Encoding ASCII\n}\n\n.("./launch-leemons.ps1")\n\nPause\n')),(0,s.kt)("p",null,"  Once downloaded, it's as easy as right click the downloaded file and run it with powershell.")),(0,s.kt)(l.Z,{value:"linux",label:"Linux and Mac",mdxType:"TabItem"},(0,s.kt)("p",null,"  Using leemons-docker is as easy as run a bash script, this script will generate all the needed files, if they are already downloaded, it will directly run leemons."),(0,s.kt)("p",null,"  Download the file ahead to your desired directory (keep in mid it will generate files)."),(0,s.kt)("p",null,"  ",(0,s.kt)("a",{target:"_blank",href:t(9362).Z},"Download leemons.sh")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Or see the code"),(0,s.kt)(r.Z,{language:"bash",title:"leemons.sh",showLineNumbers:!0,mdxType:"CodeBlock"},'#!/bin/bash\n\nFILE=./docker-compose.yaml\n\nif [ -x "$(command -v docker)" ]; then\n    echo "Docker is installed"\n    # command\nelse\n    echo "Please install Docker before continue!"\n    exit 0\nfi\n\nif [ -f "$FILE" ]; then\n  echo "Config files already created."\nelse\n  printf "MYSQLDB_USER=root\nMYSQLDB_ROOT_PASSWORD=leemons\nMYSQLDB_DATABASE=leemons\nMYSQLDB_LOCAL_PORT=3307\nNODE_LOCAL_PORT=8080" >> .env\n\n  printf "version: \\"3.8\\"\nservices:\n  mysqldb:\n    image: mysql:5.7\n    command: --default-authentication-plugin=mysql_native_password\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: \\$MYSQLDB_ROOT_PASSWORD\n      MYSQL_DATABASE: \\$MYSQLDB_DATABASE\n    ports:\n      - \\$MYSQLDB_LOCAL_PORT:3306\n    expose:\n      - 3306\n    volumes:\n      - db:/var/lib/mysql\n    healthcheck:\n      test: mysqladmin ping -h 127.0.0.1 -uroot --password=\\$\\$MYSQL_ROOT_PASSWORD\n      timeout: 10s\n      retries: 10\n\n  leemons:\n    image: leemonade/leemons:dev\n    restart: always\n    stdin_open: true\n    tty: true\n    ports:\n      - \\$NODE_LOCAL_PORT:8080\n    environment:\n      DATABASE_HOST: mysqldb\n      DATABASE_PORT: 3306\n      DATABASE_USERNAME: root\n      DATABASE_DATABASE: \\$MYSQLDB_DATABASE\n      DATABASE_PASSWORD: \\$MYSQLDB_ROOT_PASSWORD\n    depends_on:\n      mysqldb:\n        condition: service_healthy\n\nvolumes:\n  db:\n" >> docker-compose.yaml\n\n  printf "docker-compose up" >> launch-leemons.sh\nfi\n\nsh launch-leemons.sh\n')),(0,s.kt)("p",null,"  Once downloaded, it's as easy as run the downloaded script."))),(0,s.kt)("h2",{id:"3-bulk-data-creation-template-configuration"},"3. Bulk data creation template configuration"),(0,s.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"NOT SUPPORTED YET")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Currently the bulk templates are not yet supported for docker"))),(0,s.kt)("h2",{id:"4-database"},"4. Database"),(0,s.kt)("p",null,"Leemons docker uses a MySQL server internally, which is configured through the .env file in your directory"),(0,s.kt)("h2",{id:"5-test-your-leemons-"},"5. Test your Leemons \ud83d\udc69\u200d\ud83d\udcbb"),(0,s.kt)("p",null,"Once the frontend server is running, test your Leemons application by opening the main URL ",(0,s.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080")," in your browser."))}A.isMDXComponent=!0},3431:function(e,n,t){n.Z=t.p+"assets/files/leemons-915b533331f9ae38be8ffd5b9eaed34d.ps1"},9362:function(e,n,t){n.Z=t.p+"assets/files/leemons-5cf5594faa377f5a85703f55f79b0812.sh"}}]);